{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.10.6", "generated_at": "2025-08-11T19:17:27.567567Z", "invocation_id": "3e4fcae2-7a8d-49b8-b430-c6e2a0a85d81", "invocation_started_at": "2025-08-11T19:17:17.902918Z", "env": {}}, "results": [{"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:19.493700Z", "completed_at": "2025-08-11T19:17:19.519129Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:19.519629Z", "completed_at": "2025-08-11T19:17:19.779497Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.2866349220275879, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-035a-0003-c9ce0006f0d2"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.accepted_values_customer_segment_analysis_segment_health_status__Excellent__Good__Needs_Attention__Critical.c94e43effb", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        segment_health_status as value_field,\n        count(*) as n_records\n\n    from HVAC_ANALYTICS.dbt_dev.customer_segment_analysis\n    group by segment_health_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Excellent','Good','Needs Attention','Critical'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:19.782258Z", "completed_at": "2025-08-11T19:17:19.790303Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:19.790694Z", "completed_at": "2025-08-11T19:17:19.994756Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.21358561515808105, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-0398-0003-c9ce0006c0f2"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.accepted_values_customer_segments_marketing_persona__VIP_Premium__Proactive_Maintainer__High_Maintenance__New_Customer_First_Time__Win_Back_Candidate__Key_Account__Standard_Customer.510a5c02b4", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        marketing_persona as value_field,\n        count(*) as n_records\n\n    from HVAC_ANALYTICS.dbt_dev.customer_segments\n    group by marketing_persona\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'VIP Premium','Proactive Maintainer','High Maintenance','New Customer - First Time','Win Back Candidate','Key Account','Standard Customer'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:19.500909Z", "completed_at": "2025-08-11T19:17:19.513025Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:19.513402Z", "completed_at": "2025-08-11T19:17:20.001031Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.501096248626709, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-0398-0003-c9ce0006c0ee"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.accepted_values_customer_segments_is_anomaly__True__False.3aa5324ad5", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        is_anomaly as value_field,\n        count(*) as n_records\n\n    from HVAC_ANALYTICS.dbt_dev.customer_segments\n    group by is_anomaly\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'True','False'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:20.005257Z", "completed_at": "2025-08-11T19:17:20.020531Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:20.020960Z", "completed_at": "2025-08-11T19:17:20.252428Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.24946308135986328, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-027d-0003-c9ce000700ca"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.accepted_values_customer_segments_risk_category__High_Churn_Risk__Medium_Churn_Risk__Payment_Risk__Reputation_Risk__Low_Risk.1fe9e8c59e", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        risk_category as value_field,\n        count(*) as n_records\n\n    from HVAC_ANALYTICS.dbt_dev.customer_segments\n    group by risk_category\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'High Churn Risk','Medium Churn Risk','Payment Risk','Reputation Risk','Low Risk'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:20.254789Z", "completed_at": "2025-08-11T19:17:20.261948Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:20.262316Z", "completed_at": "2025-08-11T19:17:20.477154Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.2231602668762207, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-018b-0003-c9ce0006d0d6"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.accepted_values_customer_segments_value_tier__Platinum__Gold__Silver__Bronze__Basic.d4f397b052", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        value_tier as value_field,\n        count(*) as n_records\n\n    from HVAC_ANALYTICS.dbt_dev.customer_segments\n    group by value_tier\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Platinum','Gold','Silver','Bronze','Basic'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:20.011261Z", "completed_at": "2025-08-11T19:17:20.018035Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:20.018375Z", "completed_at": "2025-08-11T19:17:20.589106Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.5786271095275879, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-019e-0003-c9ce0006e0ce"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.accepted_values_customer_segments_segment_name__Champions__Loyal_Customers__New_Customers__At_Risk__Lost_Customers__Potential_Loyalists__Unclassified.2ba93090cf", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        segment_name as value_field,\n        count(*) as n_records\n\n    from HVAC_ANALYTICS.dbt_dev.customer_segments\n    group by segment_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Champions','Loyal Customers','New Customers','At Risk','Lost Customers','Potential Loyalists','Unclassified'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:20.479722Z", "completed_at": "2025-08-11T19:17:20.485167Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:20.485535Z", "completed_at": "2025-08-11T19:17:20.863237Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3843708038330078, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-0237-0003-c9ce000710ce"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.accepted_values_stg_hvac__customer_features_customer_type__residential__commercial.8324705514", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        customer_type as value_field,\n        count(*) as n_records\n\n    from HVAC_ANALYTICS.dbt_dev.stg_hvac__customer_features\n    group by customer_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'residential','commercial'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:20.591944Z", "completed_at": "2025-08-11T19:17:20.598537Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:20.598879Z", "completed_at": "2025-08-11T19:17:21.025097Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.43405795097351074, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-035a-0003-c9ce0006f0d6"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.accepted_values_stg_hvac__customer_features_preliminary_segment__New_Customer__Inactive__VIP__High_Maintenance__Proactive__Standard.1a319ee58c", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        preliminary_segment as value_field,\n        count(*) as n_records\n\n    from HVAC_ANALYTICS.dbt_dev.stg_hvac__customer_features\n    group by preliminary_segment\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'New Customer','Inactive','VIP','High Maintenance','Proactive','Standard'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:20.867643Z", "completed_at": "2025-08-11T19:17:20.874508Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:20.874866Z", "completed_at": "2025-08-11T19:17:21.122166Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.2558438777923584, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-019e-0003-c9ce0006e0d2"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.dbt_utils_accepted_range_customer_segment_analysis_avg_lifetime_value__1000000__0.2cc0606cae", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from HVAC_ANALYTICS.dbt_dev.customer_segment_analysis\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not avg_lifetime_value >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not avg_lifetime_value <= 1000000\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:21.027459Z", "completed_at": "2025-08-11T19:17:21.031547Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:21.031914Z", "completed_at": "2025-08-11T19:17:21.249409Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.22272801399230957, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-019e-0003-c9ce0006e0d6"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.dbt_utils_accepted_range_customer_segment_analysis_avg_satisfaction__True__10_0__1_0.1852c342a5", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from HVAC_ANALYTICS.dbt_dev.customer_segment_analysis\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not avg_satisfaction >= 1.0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not avg_satisfaction <= 10.0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:21.124452Z", "completed_at": "2025-08-11T19:17:21.128472Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:21.128857Z", "completed_at": "2025-08-11T19:17:21.261208Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.13748717308044434, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-035a-0003-c9ce0006f0da"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.dbt_utils_accepted_range_customer_segment_analysis_customer_count__10000__0.818d0ed740", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from HVAC_ANALYTICS.dbt_dev.customer_segment_analysis\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not customer_count >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not customer_count <= 10000\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:21.251833Z", "completed_at": "2025-08-11T19:17:21.256240Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:21.256789Z", "completed_at": "2025-08-11T19:17:21.447615Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.1966266632080078, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-0398-0003-c9ce0006c0fa"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.dbt_utils_accepted_range_customer_segment_analysis_segment_health_score__True__100__0.a8da1080e8", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from HVAC_ANALYTICS.dbt_dev.customer_segment_analysis\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not segment_health_score >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not segment_health_score <= 100\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:21.263648Z", "completed_at": "2025-08-11T19:17:21.268786Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:21.269243Z", "completed_at": "2025-08-11T19:17:21.460152Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.19725894927978516, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-0398-0003-c9ce0006c0f6"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.dbt_utils_accepted_range_customer_segment_analysis_segment_percentage__100_0__0_0.66fd09df9f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from HVAC_ANALYTICS.dbt_dev.customer_segment_analysis\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not segment_percentage >= 0.0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not segment_percentage <= 100.0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:21.462695Z", "completed_at": "2025-08-11T19:17:21.472522Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:21.472875Z", "completed_at": "2025-08-11T19:17:21.608983Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.14714503288269043, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-027d-0003-c9ce000700d2"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.dbt_utils_accepted_range_customer_segments_lifetime_value__1000000__0.0af1bbea29", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from HVAC_ANALYTICS.dbt_dev.customer_segments\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not lifetime_value >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not lifetime_value <= 1000000\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:21.453416Z", "completed_at": "2025-08-11T19:17:21.466366Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:21.466805Z", "completed_at": "2025-08-11T19:17:21.612983Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.16138315200805664, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-027d-0003-c9ce000700ce"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.dbt_utils_accepted_range_customer_segments_business_cluster__6__1.564f8eb9ac", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from HVAC_ANALYTICS.dbt_dev.customer_segments\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not business_cluster >= 1\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not business_cluster <= 6\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:21.625838Z", "completed_at": "2025-08-11T19:17:21.630460Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:21.630847Z", "completed_at": "2025-08-11T19:17:21.756861Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.13704538345336914, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-018b-0003-c9ce0006d0da"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.dbt_utils_accepted_range_customer_segments_normalized_monetary__True__1_0__0_0.0f06faa865", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from HVAC_ANALYTICS.dbt_dev.customer_segments\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not normalized_monetary >= 0.0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not normalized_monetary <= 1.0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:21.621971Z", "completed_at": "2025-08-11T19:17:21.634753Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:21.635082Z", "completed_at": "2025-08-11T19:17:21.782190Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.16296052932739258, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-018b-0003-c9ce0006d0de"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.dbt_utils_accepted_range_customer_segments_normalized_frequency__True__1_0__0_0.c53842a93c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from HVAC_ANALYTICS.dbt_dev.customer_segments\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not normalized_frequency >= 0.0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not normalized_frequency <= 1.0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:21.759587Z", "completed_at": "2025-08-11T19:17:21.763644Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:21.763977Z", "completed_at": "2025-08-11T19:17:21.981139Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.22258687019348145, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-0237-0003-c9ce000710d2"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.dbt_utils_accepted_range_customer_segments_normalized_recency__True__1_0__0_0.73bf70a634", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from HVAC_ANALYTICS.dbt_dev.customer_segments\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not normalized_recency >= 0.0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not normalized_recency <= 1.0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:21.784879Z", "completed_at": "2025-08-11T19:17:21.789553Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:21.789890Z", "completed_at": "2025-08-11T19:17:22.159197Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.37520432472229004, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-0237-0003-c9ce000710d6"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.dbt_utils_accepted_range_stg_hvac__customer_features_avg_satisfaction__True__10_0__1_0.98d490b802", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from HVAC_ANALYTICS.dbt_dev.stg_hvac__customer_features\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not avg_satisfaction >= 1.0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not avg_satisfaction <= 10.0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:21.986234Z", "completed_at": "2025-08-11T19:17:21.990369Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:21.990723Z", "completed_at": "2025-08-11T19:17:22.361611Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.3769385814666748, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-035a-0003-c9ce0006f0de"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.dbt_utils_accepted_range_stg_hvac__customer_features_days_since_last_service__10000__0.1ce6464925", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from HVAC_ANALYTICS.dbt_dev.stg_hvac__customer_features\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not days_since_last_service >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not days_since_last_service <= 10000\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:22.161789Z", "completed_at": "2025-08-11T19:17:22.165614Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:22.165979Z", "completed_at": "2025-08-11T19:17:22.873742Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.712759256362915, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-019e-0003-c9ce0006e0da"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.dbt_utils_accepted_range_stg_hvac__customer_features_emergency_ratio__True__1_0__0_0.2e1abf1b34", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from HVAC_ANALYTICS.dbt_dev.stg_hvac__customer_features\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not emergency_ratio >= 0.0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not emergency_ratio <= 1.0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:22.365240Z", "completed_at": "2025-08-11T19:17:22.369051Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:22.369409Z", "completed_at": "2025-08-11T19:17:22.882470Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.5184013843536377, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-0398-0003-c9ce0006c0fe"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.dbt_utils_accepted_range_stg_hvac__customer_features_late_payment_ratio__True__1_0__0_0.22854a0bfa", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from HVAC_ANALYTICS.dbt_dev.stg_hvac__customer_features\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not late_payment_ratio >= 0.0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not late_payment_ratio <= 1.0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:22.884928Z", "completed_at": "2025-08-11T19:17:22.889648Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:22.890108Z", "completed_at": "2025-08-11T19:17:23.247432Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.36338043212890625, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-027d-0003-c9ce000700d6"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.dbt_utils_accepted_range_stg_hvac__customer_features_maintenance_ratio__True__1_0__0_0.fd33665c56", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from HVAC_ANALYTICS.dbt_dev.stg_hvac__customer_features\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not maintenance_ratio >= 0.0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not maintenance_ratio <= 1.0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:22.876227Z", "completed_at": "2025-08-11T19:17:22.892700Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:22.893570Z", "completed_at": "2025-08-11T19:17:23.284056Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.40870046615600586, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-035a-0003-c9ce0006f0e2"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.dbt_utils_accepted_range_stg_hvac__customer_features_lifetime_value__1000000__0.2e2cbbe882", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from HVAC_ANALYTICS.dbt_dev.stg_hvac__customer_features\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not lifetime_value >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not lifetime_value <= 1000000\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:23.286980Z", "completed_at": "2025-08-11T19:17:23.293364Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:23.293693Z", "completed_at": "2025-08-11T19:17:23.398653Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.11268258094787598, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-0398-0003-c9ce0006c106"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.dbt_utils_expression_is_true_customer_segment_analysis_avg_lifetime_value_0.79dfc6ed53", "compiled": true, "compiled_code": "\n\n\n\nselect\n    1\nfrom HVAC_ANALYTICS.dbt_dev.customer_segment_analysis\n\nwhere not(avg_lifetime_value >= 0)\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:23.403659Z", "completed_at": "2025-08-11T19:17:23.408121Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:23.408549Z", "completed_at": "2025-08-11T19:17:23.588632Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.18611550331115723, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-027d-0003-c9ce000700da"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.dbt_utils_expression_is_true_customer_segment_analysis_customer_count_0.1bbd5f0e72", "compiled": true, "compiled_code": "\n\n\n\nselect\n    1\nfrom HVAC_ANALYTICS.dbt_dev.customer_segment_analysis\n\nwhere not(customer_count > 0)\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:23.250036Z", "completed_at": "2025-08-11T19:17:23.254544Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:23.254860Z", "completed_at": "2025-08-11T19:17:23.688512Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.4393153190612793, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-0398-0003-c9ce0006c102"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.dbt_utils_accepted_range_stg_hvac__customer_features_total_service_calls__1000__0.64a61d3472", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from HVAC_ANALYTICS.dbt_dev.stg_hvac__customer_features\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_service_calls >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_service_calls <= 1000\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:23.591090Z", "completed_at": "2025-08-11T19:17:23.596621Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:23.597023Z", "completed_at": "2025-08-11T19:17:23.705322Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.11502647399902344, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-018b-0003-c9ce0006d0e2"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.dbt_utils_expression_is_true_customer_segments_lifetime_value_0.76f55e69fa", "compiled": true, "compiled_code": "\n\n\n\nselect\n    1\nfrom HVAC_ANALYTICS.dbt_dev.customer_segments\n\nwhere not(lifetime_value >= 0)\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:23.693615Z", "completed_at": "2025-08-11T19:17:23.698394Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:23.698719Z", "completed_at": "2025-08-11T19:17:23.801146Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.10902953147888184, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-0398-0003-c9ce0006c10a"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.dbt_utils_expression_is_true_customer_segments_total_service_calls_0.7fbe9134f8", "compiled": true, "compiled_code": "\n\n\n\nselect\n    1\nfrom HVAC_ANALYTICS.dbt_dev.customer_segments\n\nwhere not(total_service_calls >= 0)\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:23.707674Z", "completed_at": "2025-08-11T19:17:23.712766Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:23.713113Z", "completed_at": "2025-08-11T19:17:23.923024Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.2160930633544922, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-0237-0003-c9ce000710da"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_customer_segment_analysis_analysis_date.d372fae485", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect analysis_date\nfrom HVAC_ANALYTICS.dbt_dev.customer_segment_analysis\nwhere analysis_date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:23.925344Z", "completed_at": "2025-08-11T19:17:23.930210Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:23.930550Z", "completed_at": "2025-08-11T19:17:24.057104Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.1325840950012207, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-019e-0003-c9ce0006e0de"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_customer_segment_analysis_customer_count.f6cc8777d0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_count\nfrom HVAC_ANALYTICS.dbt_dev.customer_segment_analysis\nwhere customer_count is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:24.061207Z", "completed_at": "2025-08-11T19:17:24.064909Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:24.065247Z", "completed_at": "2025-08-11T19:17:24.186331Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.12613368034362793, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-035a-0003-c9ce0006f0e6"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_customer_segment_analysis_marketing_strategy.69ade11893", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect marketing_strategy\nfrom HVAC_ANALYTICS.dbt_dev.customer_segment_analysis\nwhere marketing_strategy is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:24.188657Z", "completed_at": "2025-08-11T19:17:24.192051Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:24.192490Z", "completed_at": "2025-08-11T19:17:24.311544Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.12382173538208008, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-0398-0003-c9ce0006c10e"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_customer_segment_analysis_primary_recommendation.bf5b09f276", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect primary_recommendation\nfrom HVAC_ANALYTICS.dbt_dev.customer_segment_analysis\nwhere primary_recommendation is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:24.315965Z", "completed_at": "2025-08-11T19:17:24.319818Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:24.320157Z", "completed_at": "2025-08-11T19:17:24.426086Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.11110377311706543, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-027d-0003-c9ce000700de"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_customer_segment_analysis_segment_health_score.753fc4aba0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect segment_health_score\nfrom HVAC_ANALYTICS.dbt_dev.customer_segment_analysis\nwhere segment_health_score is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:24.428440Z", "completed_at": "2025-08-11T19:17:24.432450Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:24.432813Z", "completed_at": "2025-08-11T19:17:24.697907Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.2702031135559082, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-018b-0003-c9ce0006d0ea"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_customer_segment_analysis_segment_health_status.2e5b0bfe9f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect segment_health_status\nfrom HVAC_ANALYTICS.dbt_dev.customer_segment_analysis\nwhere segment_health_status is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:23.806079Z", "completed_at": "2025-08-11T19:17:23.810017Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:23.810352Z", "completed_at": "2025-08-11T19:17:24.705978Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.9013290405273438, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-018b-0003-c9ce0006d0e6"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_customer_segment_analysis_avg_lifetime_value.b21bbc93ae", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect avg_lifetime_value\nfrom HVAC_ANALYTICS.dbt_dev.customer_segment_analysis\nwhere avg_lifetime_value is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:24.708357Z", "completed_at": "2025-08-11T19:17:24.714041Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:24.714355Z", "completed_at": "2025-08-11T19:17:24.831938Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.12428474426269531, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-0398-0003-c9ce0006c112"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_customer_segment_analysis_segment_percentage.28a4b891e9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect segment_percentage\nfrom HVAC_ANALYTICS.dbt_dev.customer_segment_analysis\nwhere segment_percentage is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:24.700190Z", "completed_at": "2025-08-11T19:17:24.711531Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:24.711988Z", "completed_at": "2025-08-11T19:17:24.894942Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.19568347930908203, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-0237-0003-c9ce000710de"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_customer_segment_analysis_segment_name.972ebf039b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect segment_name\nfrom HVAC_ANALYTICS.dbt_dev.customer_segment_analysis\nwhere segment_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:24.834375Z", "completed_at": "2025-08-11T19:17:24.838422Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:24.838750Z", "completed_at": "2025-08-11T19:17:24.947809Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.11434412002563477, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-0237-0003-c9ce000710e2"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_customer_segments_business_cluster.be694aebac", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect business_cluster\nfrom HVAC_ANALYTICS.dbt_dev.customer_segments\nwhere business_cluster is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:24.900228Z", "completed_at": "2025-08-11T19:17:24.904496Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:24.904869Z", "completed_at": "2025-08-11T19:17:25.026533Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.1278829574584961, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-019e-0003-c9ce0006e0e2"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_customer_segments_customer_id.bcd345d84b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom HVAC_ANALYTICS.dbt_dev.customer_segments\nwhere customer_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:24.952345Z", "completed_at": "2025-08-11T19:17:24.956690Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:24.957059Z", "completed_at": "2025-08-11T19:17:25.076868Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.12588858604431152, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-0398-0003-c9ce0006c116"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_customer_segments_is_anomaly.c2edc26ae8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect is_anomaly\nfrom HVAC_ANALYTICS.dbt_dev.customer_segments\nwhere is_anomaly is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:25.029011Z", "completed_at": "2025-08-11T19:17:25.032707Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:25.033046Z", "completed_at": "2025-08-11T19:17:25.142185Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.11417436599731445, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-035a-0003-c9ce0006f0ea"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_customer_segments_lifetime_value.af0dee01ff", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect lifetime_value\nfrom HVAC_ANALYTICS.dbt_dev.customer_segments\nwhere lifetime_value is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:25.081412Z", "completed_at": "2025-08-11T19:17:25.085141Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:25.085501Z", "completed_at": "2025-08-11T19:17:25.202943Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.12270641326904297, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-018b-0003-c9ce0006d0ee"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_customer_segments_marketing_persona.9626add3e0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect marketing_persona\nfrom HVAC_ANALYTICS.dbt_dev.customer_segments\nwhere marketing_persona is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:25.146093Z", "completed_at": "2025-08-11T19:17:25.149781Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:25.150124Z", "completed_at": "2025-08-11T19:17:25.264878Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.11996698379516602, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-0398-0003-c9ce0006c11a"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_customer_segments_normalized_frequency.a05786d7ff", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect normalized_frequency\nfrom HVAC_ANALYTICS.dbt_dev.customer_segments\nwhere normalized_frequency is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:25.205916Z", "completed_at": "2025-08-11T19:17:25.211577Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:25.211917Z", "completed_at": "2025-08-11T19:17:25.323814Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.11871814727783203, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-0237-0003-c9ce000710e6"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_customer_segments_normalized_monetary.602908bf09", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect normalized_monetary\nfrom HVAC_ANALYTICS.dbt_dev.customer_segments\nwhere normalized_monetary is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:25.269505Z", "completed_at": "2025-08-11T19:17:25.273579Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:25.273902Z", "completed_at": "2025-08-11T19:17:25.388724Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.12017393112182617, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-027d-0003-c9ce000700e2"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_customer_segments_normalized_recency.1dab26138c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect normalized_recency\nfrom HVAC_ANALYTICS.dbt_dev.customer_segments\nwhere normalized_recency is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:25.328279Z", "completed_at": "2025-08-11T19:17:25.332212Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:25.332611Z", "completed_at": "2025-08-11T19:17:25.457683Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.13060855865478516, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-019e-0003-c9ce0006e0e6"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_customer_segments_risk_category.106df33292", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect risk_category\nfrom HVAC_ANALYTICS.dbt_dev.customer_segments\nwhere risk_category is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:25.391013Z", "completed_at": "2025-08-11T19:17:25.394609Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:25.394951Z", "completed_at": "2025-08-11T19:17:25.509227Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.11896014213562012, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-018b-0003-c9ce0006d0f2"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_customer_segments_segment_name.8c4ef9ba82", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect segment_name\nfrom HVAC_ANALYTICS.dbt_dev.customer_segments\nwhere segment_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:25.462848Z", "completed_at": "2025-08-11T19:17:25.467966Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:25.468379Z", "completed_at": "2025-08-11T19:17:25.583523Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.12191605567932129, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-0398-0003-c9ce0006c11e"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_customer_segments_segmentation_date.127ef35c6e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect segmentation_date\nfrom HVAC_ANALYTICS.dbt_dev.customer_segments\nwhere segmentation_date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:25.512053Z", "completed_at": "2025-08-11T19:17:25.515808Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:25.516148Z", "completed_at": "2025-08-11T19:17:25.615835Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.10460567474365234, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-0237-0003-c9ce000710ea"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_customer_segments_value_tier.0dfb3de1be", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect value_tier\nfrom HVAC_ANALYTICS.dbt_dev.customer_segments\nwhere value_tier is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:25.585870Z", "completed_at": "2025-08-11T19:17:25.589767Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:25.590100Z", "completed_at": "2025-08-11T19:17:25.819951Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.2349245548248291, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-018b-0003-c9ce0006d0f6"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_stg_hvac__customer_features_customer_id.c892544b83", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom HVAC_ANALYTICS.dbt_dev.stg_hvac__customer_features\nwhere customer_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:25.619239Z", "completed_at": "2025-08-11T19:17:25.623423Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:25.623781Z", "completed_at": "2025-08-11T19:17:25.859191Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.24101972579956055, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-019e-0003-c9ce0006e0ea"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_stg_hvac__customer_features_customer_name.21121e4586", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_name\nfrom HVAC_ANALYTICS.dbt_dev.stg_hvac__customer_features\nwhere customer_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:25.825344Z", "completed_at": "2025-08-11T19:17:25.829395Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:25.829717Z", "completed_at": "2025-08-11T19:17:26.026972Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.20307636260986328, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-035a-0003-c9ce0006f0ee"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_stg_hvac__customer_features_customer_type.3d85c6e592", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_type\nfrom HVAC_ANALYTICS.dbt_dev.stg_hvac__customer_features\nwhere customer_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:25.861967Z", "completed_at": "2025-08-11T19:17:25.865356Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:25.865785Z", "completed_at": "2025-08-11T19:17:26.224354Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.36325907707214355, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-0398-0003-c9ce0006c122"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_stg_hvac__customer_features_days_since_last_service.204fd6100e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect days_since_last_service\nfrom HVAC_ANALYTICS.dbt_dev.stg_hvac__customer_features\nwhere days_since_last_service is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:26.029782Z", "completed_at": "2025-08-11T19:17:26.034103Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:26.034442Z", "completed_at": "2025-08-11T19:17:26.364508Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.3358798027038574, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-0398-0003-c9ce0006c126"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_stg_hvac__customer_features_lifetime_value.595d354a73", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect lifetime_value\nfrom HVAC_ANALYTICS.dbt_dev.stg_hvac__customer_features\nwhere lifetime_value is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:26.226778Z", "completed_at": "2025-08-11T19:17:26.230374Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:26.230740Z", "completed_at": "2025-08-11T19:17:26.585851Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3599972724914551, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-0237-0003-c9ce000710ee"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_stg_hvac__customer_features_preliminary_segment.6c8c1091f3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect preliminary_segment\nfrom HVAC_ANALYTICS.dbt_dev.stg_hvac__customer_features\nwhere preliminary_segment is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:26.366914Z", "completed_at": "2025-08-11T19:17:26.370488Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:26.370789Z", "completed_at": "2025-08-11T19:17:26.710283Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.3442347049713135, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-018b-0003-c9ce0006d0fa"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.not_null_stg_hvac__customer_features_total_service_calls.89de5a2ab9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_service_calls\nfrom HVAC_ANALYTICS.dbt_dev.stg_hvac__customer_features\nwhere total_service_calls is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:26.715396Z", "completed_at": "2025-08-11T19:17:26.718540Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:26.718891Z", "completed_at": "2025-08-11T19:17:26.835265Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.12133479118347168, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-0398-0003-c9ce0006c12a"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.test_segment_integrity", "compiled": true, "compiled_code": "/*\n    Test that all customers are properly segmented and no customer appears in multiple segments\n*/\n\n-- Test: Every customer should have exactly one segment\nSELECT \n    customer_id,\n    COUNT(*) as segment_count\nFROM HVAC_ANALYTICS.dbt_dev.customer_segments\nGROUP BY customer_id\nHAVING COUNT(*) != 1", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:26.592048Z", "completed_at": "2025-08-11T19:17:26.597779Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:26.598114Z", "completed_at": "2025-08-11T19:17:26.967142Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.37656497955322266, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-035a-0003-c9ce0006f0f2"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.test_features_completeness", "compiled": true, "compiled_code": "/*\n    Test that customer features are complete and reasonable\n*/\n\n-- Test: No customers should have impossible feature combinations\nSELECT \n    customer_id,\n    total_service_calls,\n    lifetime_value,\n    days_since_last_service\nFROM HVAC_ANALYTICS.dbt_dev.stg_hvac__customer_features\nWHERE \n    -- Customers with service calls should have positive lifetime value\n    (total_service_calls > 0 AND lifetime_value <= 0) OR\n    -- Customers with no service calls shouldn't have recent service dates\n    (total_service_calls = 0 AND days_since_last_service < 9999) OR\n    -- Negative values that shouldn't exist\n    total_service_calls < 0 OR\n    lifetime_value < 0", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:26.840743Z", "completed_at": "2025-08-11T19:17:26.844456Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:26.844787Z", "completed_at": "2025-08-11T19:17:26.979279Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.13994288444519043, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-018b-0003-c9ce0006d0fe"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.test_segment_logic_consistency", "compiled": true, "compiled_code": "/*\n    Test logical consistency of segment assignments\n    Champions should have high lifetime value and good satisfaction\n*/\n\n-- Test: Champions should meet minimum criteria\nSELECT \n    customer_id,\n    segment_name,\n    lifetime_value,\n    avg_satisfaction,\n    total_service_calls\nFROM HVAC_ANALYTICS.dbt_dev.customer_segments\nWHERE segment_name = 'Champions'\n  AND (\n    lifetime_value < 1000 OR \n    avg_satisfaction < 7 OR\n    total_service_calls < 2\n  )", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:26.969511Z", "completed_at": "2025-08-11T19:17:26.974592Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:26.974977Z", "completed_at": "2025-08-11T19:17:27.124598Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.15583109855651855, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-027d-0003-c9ce000700e6"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.unique_customer_segments_customer_id.f3a5b61998", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom HVAC_ANALYTICS.dbt_dev.customer_segments\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-08-11T19:17:26.982136Z", "completed_at": "2025-08-11T19:17:26.988124Z"}, {"name": "execute", "started_at": "2025-08-11T19:17:26.988702Z", "completed_at": "2025-08-11T19:17:27.342506Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.36138033866882324, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01be4de5-0105-035a-0003-c9ce0006f0f6"}, "message": null, "failures": 0, "unique_id": "test.hvac_analytics.unique_stg_hvac__customer_features_customer_id.fe8abd9d49", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom HVAC_ANALYTICS.dbt_dev.stg_hvac__customer_features\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}], "elapsed_time": 8.641634464263916, "args": {"validate_macro_args": false, "log_format": "default", "populate_cache": true, "partial_parse_file_diff": true, "require_explicit_package_overrides_for_builtin_materializations": true, "log_format_file": "debug", "exclude_resource_types": [], "state_modified_compare_vars": false, "require_yaml_configuration_for_mf_time_spines": false, "state_modified_compare_more_unrendered_values": false, "log_file_max_bytes": 10485760, "version_check": true, "strict_mode": false, "exclude": [], "indirect_selection": "eager", "favor_state": false, "source_freshness_run_project_hooks": true, "show_resource_report": false, "use_colors": true, "partial_parse": true, "require_resource_names_without_spaces": true, "require_generic_test_arguments_property": false, "defer": false, "macro_debugging": false, "upload_to_artifacts_ingest_api": false, "show_all_deprecations": false, "use_fast_test_edges": false, "write_json": true, "log_level_file": "debug", "require_batched_execution_for_custom_microbatch_strategy": false, "use_colors_file": true, "require_nested_cumulative_type_params": false, "which": "test", "log_path": "/home/ewt/snowflake-hvac/hvac_analytics/logs", "profiles_dir": "/home/ewt/.dbt", "warn_error_options": {"error": [], "warn": [], "silence": []}, "project_dir": "/home/ewt/snowflake-hvac/hvac_analytics", "select": [], "skip_nodes_if_on_run_start_fails": false, "invocation_command": "dbt test", "print": true, "static_parser": true, "log_level": "info", "introspect": true, "printer_width": 80, "cache_selected_only": false, "resource_types": [], "send_anonymous_usage_stats": true, "vars": {}, "quiet": false, "require_all_warnings_handled_by_warn_error": false}}